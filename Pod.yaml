#Pod资源清单，使用命令kubectl explain Pod可以查看具体的参数信息，查看apiVersion：kubectl explain Pod.apiVersion
apiVersion: v1 #使用kubectl explain rs查看版本，注：文档版本是落后于k8s版本的
kind: Pod #指定资源清单的类型Pod|Deployment...
metadata: #定义元数据
    name: #Pod名称
    namespace: #Pod所属名字空间默认为default，查看系统有哪些名称空间：kubectl get namespaces
    labels: #定义Pod的标签,apiserver通过标签选择器来确定负载哪些Pod
        key1: value1
        key2: value2
        keyn: valuen
    annotations: #annotations不会被Kubernetes直接使用，其主要目的是方便用户阅读查找
        key1: value1
        key2: value2
        keyn: valuen
spec: #期望达到的Pod状态，启动Pod时Pod会自动不断地向该状态靠近并达到该状态
    restartPolicy: #容器重启策略Always|Never|OnFailure，默认为Always
    containers: #指定Pod中要运行的容器类型为对象数组
    - name: #容器名
      image: #镜像
      ports: #指定容器端口，类型为对象数组
        - name: #指定名字
          containerPort: #容器端口如：nginx镜像的端口为80
      imagePullPolicy: #镜像拖取策略：Always|Never|IfNotPresent，如果镜像tag为::latest则默认为Always
      command: ["/bin/sh", "-c", "..."] #指定容器启动时运行的命令，不指定则使用默认的命令，对应Dockerfile中的ENTRYPOINT，类型为字符串数组
      command: 
        - "/bin/sh"
        - "-c"
        - "..."
      args: ["..."] #作为参数传递给command，对应Dockerfile中的CMD，command、args、ENTRYPOINT、CMD关系参见：https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
      args:
        - "..."
      livenessProbe: #容器存活性探测共三种方式任选其一，【该项非必选项但必须配置】，如果探测失败则会通知kubelet根据容器的重启策略来（restartPolicy）重启容器：ExecAction：exec|TCPSocketAction：tcpSocket|HTTPGetAction：httpGet
        exec: #指定命令方式
            command: ["/bin/sh", "-c", "..."] #指定运行的指令，返回0即为存活/健康，非0即为不健康，默认不会运行在/bin/sh中
        httpGet: #通过http的Get请求来确认是否存活，返回状态码在[200-400)之间即存活
            host: #指定主机名，默认为Pod的IP地址
            httpHeaders: #指定请求头，类型为对象数组
            path: #请求路径
            port: #请求端口，可使用指定image时的端口的名字，必填
            scheme: #指定请求的scheme（HTTP|HTTPS），默认为HTTP
        tcpSocket: #通过tcpSocket的方式探测是否存活，端口打开即为成功
            host: #同httpGet
            port: #同httpGet
        initialDelaySeconds: #指定执行探测的时间延迟，容器启动并不代表容器内运行的程序已经启动完成
        timeoutSeconds: #探测超时时间，超过该时间认为探测失败，默认为1秒，最小值为1秒
        periodSeconds: #探测间隔时间，默认为10秒最小为1秒
      readinessProbe: #就绪性探测，用于探测容器是否准备就绪，三种方式同livenessProbe，【该项非必选项但必须配置】，Pod启动后如果不做就绪性探测，它会马上挂载到Service上，如果此时容器内服务还未启动完成则会有大量请求到该Pod，导致请求失败
      lifecycle: #生命周期管理
        postStart: #容器运行之前执行方式：exec|httpGet|tcpSocket
        preStop: #容器关闭之前执行，参数同postStart
    nodeSelector: #指定选择Pod所在节点的标签，k8s中Pod、Node、Development。。。都可以打标签
        key1: value1
        key2: value2
        keyn: valuen
status: #Pod当前状态，不用配置，该项为只读项